{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lmrlo\\\\Downloads\\\\PunchBeginnerApp-main\\\\PunchBeginnerApp-main\\\\it_1_code\\\\src\\\\admindashboard\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  baseURL: 'https://s31510gc92.execute-api.us-east-2.amazonaws.com/Prod'\n});\nfunction AdminDashboard(props) {\n  _s();\n  let password = \"\";\n  const fillTable = projects => {\n    var element = document.getElementsByClassName(\"data\"),\n      index;\n    for (index = element.length - 1; index >= 0; index--) {\n      element[index].parentNode.removeChild(element[index]);\n    }\n    // Clear table?\n    projects.forEach(project => {\n      // Creating the Row\n      var tr = document.createElement(\"tr\");\n      tr.className = \"data\";\n      // Creating the Cells\n      var projectName = document.createElement(\"td\");\n      projectName.className = \"data\";\n      var goalAmount = document.createElement(\"td\");\n      goalAmount.className = \"data\";\n      var amountReached = document.createElement(\"td\");\n      amountReached.className = \"data\";\n      // Creating the Text in the Cells\n      var projectNameTxt = document.createTextNode(project.project_name);\n      var goalAmountTxt = document.createTextNode(project.project_goal);\n      var amountReachedTxt = document.createTextNode(project.project_funded);\n      // Getting the Table\n      var projectsTable = document.getElementById(\"projects-table\");\n      // Appending the Text to the Cells\n      projectName.appendChild(projectNameTxt);\n      goalAmount.appendChild(goalAmountTxt);\n      amountReached.appendChild(amountReachedTxt);\n      // Appending the Cells to the Row\n      tr.appendChild(projectName);\n      tr.appendChild(goalAmount);\n      tr.appendChild(amountReached);\n      // Appending the Row to the Table\n      projectsTable.appendChild(tr);\n    });\n  };\n  const fetchAllProjects = () => {\n    instance.post(\"/admin/project/list\", {\n      \"admin_password\": props.password\n    }).then(function (response) {\n      fillTable(response.data.projects);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    fetchAllProjects();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"dashboard-input-search\",\n      type: \"search\",\n      id: \"myInput\",\n      placeholder: \"Search for Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-filter\",\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-create-project\",\n      onClick: () => {\n        //NewProject.password = AdminDashboard.password;\n        //setShowNewProject(true);\n      },\n      children: \"Create New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"projects-table\",\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Goal Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Amount Reached\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminDashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AdminDashboard;\n;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["useEffect","axios","FontAwesomeIcon","faFilter","instance","create","baseURL","AdminDashboard","props","password","fillTable","projects","element","document","getElementsByClassName","index","length","parentNode","removeChild","forEach","project","tr","createElement","className","projectName","goalAmount","amountReached","projectNameTxt","createTextNode","project_name","goalAmountTxt","project_goal","amountReachedTxt","project_funded","projectsTable","getElementById","appendChild","fetchAllProjects","post","then","response","data","catch","error","console","log"],"sources":["C:/Users/lmrlo/Downloads/PunchBeginnerApp-main/PunchBeginnerApp-main/it_1_code/src/admindashboard/AdminDashboard.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\nimport './AdminDashboard.css';\n\nconst instance = axios.create({\n    baseURL: 'https://s31510gc92.execute-api.us-east-2.amazonaws.com/Prod'\n}\n);\n\nfunction AdminDashboard(props) {\n\n    let password = \"\";\n\n    const fillTable = (projects) => {\n        var element = document.getElementsByClassName(\"data\"), index;\n        for (index = element.length - 1; index >= 0; index--) {\n            element[index].parentNode.removeChild(element[index]);\n        }\n        // Clear table?\n        projects.forEach(project => {\n            // Creating the Row\n            var tr = document.createElement(\"tr\");\n            tr.className = \"data\";\n            // Creating the Cells\n            var projectName = document.createElement(\"td\");\n            projectName.className = \"data\";\n            var goalAmount = document.createElement(\"td\");\n            goalAmount.className = \"data\";\n            var amountReached = document.createElement(\"td\");\n            amountReached.className = \"data\";\n            // Creating the Text in the Cells\n            var projectNameTxt = document.createTextNode(project.project_name);\n            var goalAmountTxt = document.createTextNode(project.project_goal);\n            var amountReachedTxt = document.createTextNode(project.project_funded);\n            // Getting the Table\n            var projectsTable = document.getElementById(\"projects-table\");\n            // Appending the Text to the Cells\n            projectName.appendChild(projectNameTxt);\n            goalAmount.appendChild(goalAmountTxt);\n            amountReached.appendChild(amountReachedTxt);\n            // Appending the Cells to the Row\n            tr.appendChild(projectName);\n            tr.appendChild(goalAmount);\n            tr.appendChild(amountReached);\n            // Appending the Row to the Table\n            projectsTable.appendChild(tr);\n        })\n    }\n\n    const fetchAllProjects = () => {\n        instance.post(\"/admin/project/list\", { \"admin_password\": props.password })\n            .then(function (response) {\n                fillTable(response.data.projects)\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    useEffect(() => {\n        fetchAllProjects();\n    });\n\n    return (\n        <div>\n            <input\n                className=\"dashboard-input-search\"\n                type=\"search\"\n                id=\"myInput\"\n                placeholder=\"Search for Projects\" />\n            <button className=\"button-filter\" >{<FontAwesomeIcon icon={faFilter} />}</button>\n            <button className=\"button-create-project\" onClick={() => {\n                //NewProject.password = AdminDashboard.password;\n                //setShowNewProject(true);\n            }}>Create New Project</button>\n\n            {/*Table that displays projects*/}\n            <table id=\"projects-table\" className=\"center\">\n                <tr>\n                    <th>Project</th>\n                    <th>Goal Amount</th>\n                    <th>Amount Reached</th>\n                </tr>\n            </table>\n        </div>\n    )\n};\n\nexport default AdminDashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}